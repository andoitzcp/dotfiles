import pandas as pd

# Path to files root directory
path = './mnt/d/Users/andoitz.campo/Documents/IBD/',

# Data types specifications
sap_dt = {'YEAR': str,
          'SOCIEDAD': str,
          'CECO': str,
          'CEBE': str,
          'ENE' : float,
          'FEB' : float,
          'MAR' : float,
          'ABR' : float,
          'MAY' : float,
          'JUN' : float,
          'JUL' : float,
          'AGO' : float,
          'SEP' : float,
          'OCT' : float,
          'NOV' : float,
          'DIC' : float}

sac_dt = {'COMPANY': str,
          'CECO': str,
          'CEBE': str,
          'ACTUALC': float,
          'AP_YEAR': float,
          'AVSAP_YEAR': float,
          'QUANTITY': float,
          'QP_YEAR': float,
          'QVSQP_YEAR': float}

# Put here the CSV files that are going to be analyzed
dfpv = pd.read_csv('./export_sap_2017_v1_val.csv',
                  sep=";", decimal=",", dtype=sap_dt)
dfpq = pd.read_csv('./export_sap_2017_v1_qty.csv',
                  sep=";", decimal=",", dtype=sap_dt)
dfc = pd.read_csv('./export_sac_2017_v1.csv', sep=";", decimal=",", dtype=sac_dt)

# Put here the security forbiden element lists
df_fceco = pd.read_csv(
        '/mnt/d/Users/andoitz.campo/Documents/IBD/utils/forbiden_cecos.csv',
        dtype={'CECO': str}, header=0)
df_fcebe = pd.read_csv(
        '/mnt/d/Users/andoitz.campo/Documents/IBD/utils/forbiden_cebes.csv',
        dtype={'CEBE': str}, header=0)

# Drop forbidden elements of the lists above
#dfp = dfpv[~dfpv['CECO'].isin(df_fceco['CECO'])]
#dfp = dfpv[~dfpv['CEBE'].isin(df_fcebe['CEBE'])]

# Transformation of SAP export
dfp['ACTUALP'] = dfp.loc[dfp['YEAR'] == '2017', 'ENE':'SEP'].sum(axis=1)
outp = dfp.loc[:,['COMPANY', 'ACTUALP']].groupby(['COMPANY']).sum().reset_index()

# Transformation of SAC export
outc= dfc.loc[:,['COMPANY', 'ACTUALC']].groupby(['COMPANY']).sum().reset_index()

# Merge both SAP and SAC transformed tables and calculate the difference
out = pd.merge(outc, outp, on='COMPANY', how='left')
out['DIFF'] = out['ACTUALC'] + out['ACTUALP']

# Some formating
pd.set_option('display.max_rows', outp.shape[0]+1)
pd.set_option('display.max_rows', outc.shape[0]+1)
pd.options.display.float_format = '{:,.2f}'.format

print(out)
