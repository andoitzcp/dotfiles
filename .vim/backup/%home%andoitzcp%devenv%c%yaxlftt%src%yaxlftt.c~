/* ************************************************************************** */
/*                                                                            */
/*                                                    ::::::::  :::::::::     */
/*   yaxlftt.c                                          :+:      :+:    :+:   */
/*                                                   +:+        +:+    +:+    */
/*   By: andoitzcp <andoitzcp@gmail.com>             +#+        +#++:++#+     */
/*                                                   +#+        +#+           */
/*   Created: 2023/04/28 20:46:38 by andoitzcp       #+#    #+# #+#           */
/*   Updated: 2023/05/01 12:26:06 by acampo-p         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "yaxlftt.h"

void    ft_strconstr(char *s, td *llist)
{
    char    *t;
    char    *tmp;
    td      *node;

    node = ft_searchnode(llist, s);
    if (!node)
        *t = '\n';
    else
        t = node->es;
    write(1, TRGTINIT, strlen(TRGTINIT));
    write(1, t, strlen(t));
    write(1, TRGTEND, strlen(TRGTEND));
}

char	*ft_strloctr(char *bfr, td *llist)
{
	size_t	i;
	char	*s;

	if (strncmp(bfr, SRCINIT, LSRCINIT))
		return(bfr);
    write (1, SRCINIT, LSRCINIT);
    bfr += LSRCINIT;
	i = 0;
	while (strncmp(bfr + i, SRCEND, LSRCEND))
		i++;
	s = strndup(bfr, i);
    write(1, s, strlen(s));
    write (1, SRCEND, LSRCEND);
    bfr += LSRCEND;
	ft_strconstr(s, llist);
	return (bfr + strlen(s) + 1);
}

void	ft_writer(char *bfr, td *llist)
{
    printf("flag3.1\n");
	while (*bfr)
	{
        printf("flag3.2\n");
		bfr = ft_strloctr(bfr, llist);
        printf("flag3.3\n");
		write(1 , bfr, 1);
		bfr++;
	}
}

int	main(int argc, char *argv[])
{
	int			fd;
	char		*bfr;
    td          *llist;

	if (argc != 3)
		return (1);
	bfr = calloc(1, sizeof(char *) * BFR_SIZE + 1);
	if (!bfr)
		return (1);
	fd = open(argv[1], 'r');
	read(fd, bfr, BFR_SIZE);
	llist = ft_nodegen(bfr);
	close(fd);
	explicit_bzero(bfr, BFR_SIZE);
    printf("flag2\n");
	fd = open(argv[2], 'r');
	read(fd, bfr, BFR_SIZE);
    printf("flag3\n");
	ft_writer(bfr, llist);
    printf("flag4\n");
    return (0);
}
